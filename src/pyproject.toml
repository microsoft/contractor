[tool.poetry]
name = "Contractor"
version = "0.1.0-alpha"
description = ""
authors = ["Ricardo Cataldi <rcataldi@microsoft.com>"]
readme = "README.md"
packages = [{include = "app", from = "."}]

[tool.poetry.dependencies]
python = "^3.12, <3.14"
fastapi = "^0.115.5"
azure-storage-blob = "^12.24.0"
azure-identity = "^1.19.0"
azure-cosmos = "^4.9.0"
semantic-kernel = "^1.20.0"
uvicorn = "*"
typing-extensions = "^4.9.0"  # Ensures compatibility with TypeAlias in Python <3.10
azure-cognitiveservices-speech = "^1.43.0"
azure-search-documents = "^11.5.2"
azure-core = "^1.32.0"
azure-cognitiveservices-vision-computervision = "^0.9.1"
pillow = "^11.1.0"
cognitive-face = "^1.5.0"
azure-ai-vision-imageanalysis = "^1.0.0"
pandas = "^2.2.3"
opencv-python = "^4.11.0.86"
azure-ai-documentintelligence = "^1.0.1"
azure-cognitiveservices-search-websearch = "^2.0.1"
python-docx = "^1.1.2"
pypdf = {extras = ["crypto"], version = "^5.4.0"}
azure-ai-inference = "^1.0.0b9"
pyrit = "^0.9.0"


[tool.poetry.group.dev.dependencies]
faker = "*"
python-dotenv = "*"
poetry-plugin-export = "*"
jupyterlab = "^4.3.5"


[tool.poetry.group.test.dependencies]
pytest = "*"
pytest-asyncio = "*"
rouge = "*"


[tool.poetry.group.lint.dependencies]
pylint = "*"
black = {extras = ["jupyter"], version = "^25.1.0"}
isort = "*"


[tool.poetry.group.docs.dependencies]
mkdocs = "*"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q -s"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "async: marks tests as async (select with '-m async')",
    "slow: marks tests as slow (select with '-m slow')"
]

[tool.pylint]
fail-under = 8.5
max-line-length = 100
max-complexity = 10
good-names = ["i", "j", "k", "ex", "Run", "_"]
disable = [
    "C0114", "C0115", "C0116", "C0301",  # Docstrings & Line Length Warnings
    "W3101",  # `confusing-with-statement` (False Positive)
    "E0401"  # `import-error` (Fixes false positives on local imports)
]
load-plugins = [
    "pylint.extensions.mccabe",
]

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312']  # Explicit Python 3.12 support
include = '\.pyi?$'
exclude = '\.git|\.hg|\.mypy_cache|\.tox|\.venv|_build|buck-out|build|dist'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 100
